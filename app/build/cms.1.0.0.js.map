{"version":3,"sources":["webpack:///webpack/bootstrap a0767aa78ebe711a1104","webpack:///./server.js","webpack:///./~/process/browser.js","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"mongoose\"","webpack:///external \"passport\"","webpack:///external \"bcryptjs\"","webpack:///external \"connect-flash\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///./config/database.js","webpack:///./config/passport.js","webpack:///external \"passport-local\"","webpack:///external \"passport-facebook\"","webpack:///external \"passport-google-oauth\"","webpack:///external \"passport-github2\"","webpack:///external \"passport-linkedin\"","webpack:///./app/models/user.js","webpack:///./config/auth.js","webpack:///./app/routes.js","webpack:///./app/models/page.js","webpack:///./app/models/project.js","webpack:///./app/models/skill.js","webpack:///./app/models/option.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,gC;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD,+B;AACA,kB;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;;;;;;;;;;ACvCD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACnLtC,qC;;;;;;ACAA,6C;;;;;;ACAA,sC;;;;;;ACAA,sC;;;;;;ACAA,sC;;;;;;ACAA,2C;;;;;;ACAA,yC;;;;;;ACAA,2C;;;;;;ACAA;AACA;AACA;;AAEA,G;;;;;;ACJA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,yBAAyB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB,E;AACrB;AACA,cAAa,E;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,2CAA0C;AAC1C;AACA;AACA;AACA,uBAAsB,yBAAyB;AAC/C;AACA;AACA;;AAEA;AACA;AACA,uFAAsF;;AAEtF;AACA;AACA,8FAA6F;;AAE7F;AACA;AACA,UAAS;;AAET,MAAK;;;;AAIL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;;AAEA;;AAEA,2BAA0B,2BAA2B;AACrD;AACA;;AAEA;;AAEA;AACA,kBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA,oEAAmE;;AAEnE;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;;AAET,MAAK,G;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,2BAA0B,6BAA6B;;AAEvD;AACA;;AAEA;AACA;AACA;AACA,6C;AACA,kBAAiB;;AAEjB;;AAEA,yD;AACA,oD;AACA,kEAAiE;AACjE,sE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,E;AACrB;AACA,cAAa;AACb,UAAS;AACT,MAAK,G;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,2BAA0B,6BAA6B;;AAEvD;AACA;;AAEA;AACA;AACA;AACA,6C;AACA,kBAAiB;;AAEjB;;AAEA,yD;AACA,oD;AACA,kE;AACA,sE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,E;AACrB;AACA,cAAa;AACb,UAAS;AACT,MAAK,G;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA,2BAA0B,2BAA2B;;AAErD;AACA;;AAEA;AACA;AACA;AACA,6C;AACA,kBAAiB;AACjB,6D;AACA;;AAEA;;AAEA,uD;AACA,kD;AACA;AACA,6F;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,E;AACrB;AACA,cAAa;AACb,UAAS;AACT,MAAK,G;;;;;AAKL;;;;;;;;ACnTA,4C;;;;;;ACAA,+C;;;;;;ACAA,mD;;;;;;ACAA,8C;;;;;;ACAA,+C;;;;;;ACAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qD;;;;;;AClDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,G;;;;;;AC9BA;AACA;AACA;AACA;AACA;;;AAGA,2C;;AAEA;AACA;AACA;AACA;;AAEA,iCAAgC,sCAAsC,G;AACtE,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,kCAAiC,qCAAqC,E;AACtE,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,mCAAkC,sCAAsC;AACxE,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA;AACA;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA,gCAA+B,kBAAkB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA,2BAA0B,uBAAuB;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA,qDAAoD,UAAU;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;;AAEA;;AAEA,8BAA6B,qBAAqB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;;AAEA,wDAAuD,UAAU;;AAEjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA,4BAA2B,uBAAuB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA,2BAA0B,oCAAoC;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8D;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,E;;AAEjB,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA,6BAA4B,mBAAmB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA,6BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;;AAEA,6BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;;;AAGT;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,kEAAiE,sCAAsC;;AAEvG;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,8DAA6D,0CAA0C;;AAEvG;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,kEAAiE,+CAA+C;;AAEhH;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,8DAA6D,+BAA+B;;AAE5F;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,wBAAuB,oCAAoC;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACntBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,qD;;;;;;ACVA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,2D;;;;;;ACdA;AACA;;AAEA;AACA;;AAEA,EAAC;;AAED,uD;;;;;;ACRA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAC;;AAED,0D","file":"cms.1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a0767aa78ebe711a1104","const express = require('express');\nconst session = require('express-session');\nconst app = express();\nconst mongoose = require('mongoose');\nconst passport = require('passport');\nconst bcrypt = require('bcryptjs');\nconst flash = require('connect-flash');\n\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\n\nconst configDB = require('./config/database.js');\n\nmongoose.Promise = global.Promise;\nmongoose.connect(configDB.url);\n\nrequire('./config/passport')(passport);\n\napp.use(express.static('app'));   \n\napp.use(cookieParser());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.set('view engine', 'pug'); \napp.use(session({ \n\tsecret: 'ceiling cat',\n\tresave: true,\n    saveUninitialized: true\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\n\nrequire('./app/routes.js')(app, passport);\n\napp.listen(process.env.PORT || 8080, function() {\n    console.log('Server started at http://localhost:8080');\n});\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./server.js\n// module id = 0\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"passport\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"bcryptjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcryptjs\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"connect-flash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"connect-flash\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 9\n// module chunks = 0","module.exports = {\n\t// looks like mongodb://<user>:<pass>@mongo.onmodulus.net:27017/Mikha4ot\n    'url' : 'mongodb://tester:1234@ds021166.mlab.com:21166/crm' \n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/database.js\n// module id = 10\n// module chunks = 0","// config/passport.js\n\n// load all the things we need\nconst LocalStrategy   = require('passport-local').Strategy;\nconst FacebookStrategy = require('passport-facebook').Strategy;\nconst GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;\nconst GitHubStrategy = require('passport-github2').Strategy;\nconst LinkedInStrategy = require('passport-linkedin').Strategy;\n\nconst User = require('../app/models/user');\nconst configAuth = require('./auth');\n\n// expose this function to our app using module.exports\nmodule.exports = function(passport) {\n\n    // =========================================================================\n    // passport session setup ==================================================\n    // =========================================================================\n    // required for persistent login sessions\n    // passport needs ability to serialize and unserialize users out of session\n\n    // used to serialize the user for the session\n    passport.serializeUser(function(user, done) {\n        done(null, user.id);\n    });\n\n    // used to deserialize the user\n    passport.deserializeUser(function(id, done) {\n        User.findById(id, function(err, user) {\n            done(err, user);\n        });\n    });\n\n    // =========================================================================\n    // LOCAL SIGNUP ============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    passport.use('local-signup', new LocalStrategy({\n        // by default, local strategy uses username and password, we will override with email\n        usernameField : 'email',\n        passwordField : 'password',\n        passReqToCallback : true // allows us to pass back the entire request to the callback\n    },\n    function(req, email, password, done) {\n\n        // asynchronous\n        // User.findOne wont fire unless data is sent back\n        process.nextTick(function() {\n\n            // find a user whose email is the same as the forms email\n            // we are checking to see if the user trying to login already exists\n            User.findOne({ 'local.email' :  email }, function(err, user) {\n                // if there are any errors, return the error\n                if (err) {\n                    return done(err, req.flash('signupMessage', 'Error on signin.'));\n                }\n\n                // check to see if theres already a user with that email\n                if (user) {\n                    return done(null, false, req.flash('signupMessage', 'That email is already taken.'));\n                } \n                else {\n\n                    // if there is no user with that email\n                    // create the user\n                    let newUser            = new User();\n\n                    // set the user's local credentials\n                    newUser.local.name = req.body.name;\n                    newUser.local.email    = email;\n                    newUser.local.password = newUser.generateHash(password);\n\n                    // save the user\n                    newUser.save(function(err) {\n                        if (err) \n                            throw err;\n                        return done(null, newUser);\n                    }); \n                }\n            });    \n        });\n    }));\n\n     // =========================================================================\n    // LOCAL LOGIN =============================================================\n    // =========================================================================\n    // we are using named strategies since we have one for login and one for signup\n    // by default, if there was no name, it would just be called 'local'\n\n    passport.use('local-login', new LocalStrategy({\n        // by default, local strategy uses username and password, we will override with email\n        usernameField : 'email',\n        passwordField : 'password',\n        passReqToCallback : true // allows us to pass back the entire request to the callback\n    },\n    function(req, email, password, done) { // callback with email and password from our form\n        console.log('local login');\n        // find a user whose email is the same as the forms email\n        // we are checking to see if the user trying to login already exists\n        User.findOne({ 'local.email' :  email }, function(err, user) {\n            // if there are any errors, return the error before anything else\n            if (err)\n                return done(err, req.flash('loginMessage', 'error on login'));\n\n            // if no user is found, return the message\n            if (!user)\n                return done(null, false, req.flash('loginMessage', 'No user found.')); // req.flash is the way to set flashdata using connect-flash\n\n            // if the user is found but the password is wrong\n            if (!user.validPassword(password))\n                return done(null, false, req.flash('loginMessage', 'Oops! Wrong password.')); // create the loginMessage and save it to session as flashdata\n\n            // all is well, return successful user\n            return done(null, user);\n        });\n\n    }));\n\n\n\n    // =========================================================================\n    // GOOGLE ==================================================================\n    // =========================================================================\n    passport.use(new GoogleStrategy({\n\n        clientID        : configAuth.googleAuth.clientID,\n        clientSecret    : configAuth.googleAuth.clientSecret,\n        callbackURL     : configAuth.googleAuth.callbackURL,\n\n    },\n    function(token, refreshToken, profile, done) {\n\n        process.nextTick(function() {\n\n            User.findOne({ 'google.id' : profile.id }, function(err, user) {\n                if (err)\n                    return done(err);\n\n                if (user) {\n\n                    return done(null, user);\n                } else {\n\n                    let newUser          = new User();\n\n                    newUser.google.id    = profile.id;\n                    newUser.google.token = token;\n                    newUser.google.name  = profile.displayName;\n                    newUser.google.email = profile.emails[0].value; // pull the first email\n\n                    newUser.save(function(err) {\n                        if (err)\n                            throw err;\n                        return done(null, newUser);\n                    });\n                }\n            });\n        });\n\n    })); \n\n    // =========================================================================\n    // FACEBOOK ================================================================\n    // =========================================================================\n    passport.use(new FacebookStrategy({\n\n        clientID        : configAuth.facebookAuth.clientID,\n        clientSecret    : configAuth.facebookAuth.clientSecret,\n        callbackURL     : configAuth.facebookAuth.callbackURL,\n        profileFields   : ['id', 'displayName', 'email', 'first_name']\n\n    },\n\n    function(token, refreshToken, profile, done) {\n\n        process.nextTick(function() {\n\n            User.findOne({ 'facebook.id' : profile.id }, function(err, user) {\n\n                if (err)\n                    return done(err);\n\n                if (user) {\n                    console.log('user matched: ' + user);\n                    console.log(profile);\n                    return done(null, user); \n                } else {\n\n                    let newUser            = new User();\n\n                    newUser.facebook.id    = profile.id;                  \n                    newUser.facebook.token = token;                     \n                    newUser.facebook.name  = profile.displayName; // look at the passport user profile to see how names are returned\n                    newUser.facebook.email = profile.emails[0].value; \n                    console.log('facebook profile retrieved');\n                    console.log(profile);\n\n                    newUser.save(function(err) {\n                        if (err)\n                            throw err;\n\n                        return done(null, newUser);\n                    }); \n                };\n            });\n        });\n    }));  \n\n    // =========================================================================\n    // LINKEDIN ================================================================\n    // =========================================================================\n    passport.use(new LinkedInStrategy({\n\n        consumerKey     : configAuth.linkedinAuth.clientID,\n        consumerSecret  : configAuth.linkedinAuth.clientSecret,\n        callbackURL     : configAuth.linkedinAuth.callbackURL,\n        profileFields   : ['id', 'first-name', 'last-name', 'email-address', 'headline']\n\n    },\n\n    function(token, refreshToken, profile, done) {\n\n        process.nextTick(function() {\n\n            User.findOne({ 'linkedin.id' : profile.id }, function(err, user) {\n\n                if (err)\n                    return done(err);\n\n                if (user) {\n                    console.log('user matched: ' + user);\n                    console.log(profile);\n                    return done(null, user); \n                } else {\n\n                    let newUser            = new User();\n\n                    newUser.linkedin.id    = profile.id;                  \n                    newUser.linkedin.token = token;                     \n                    newUser.linkedin.name  = profile.displayName; \n                    newUser.linkedin.email = profile.emails[0].value;  \n                    console.log('linkedin profile retrieved');\n                    console.log(profile);\n\n                    newUser.save(function(err) {\n                        if (err)\n                            throw err;\n\n                        return done(null, newUser);\n                    }); \n                };\n            });\n        });\n    }));  \n\n    // =========================================================================\n    // GITHUB ================================================================\n    // =========================================================================\n    passport.use(new GitHubStrategy({\n\n        clientID        : configAuth.githubAuth.clientID,\n        clientSecret    : configAuth.githubAuth.clientSecret,\n        callbackURL     : configAuth.githubAuth.callbackURL,\n        userAgent      : 'CRM'\n\n    },\n\n    function(token, refreshToken, profile, done) {\n\n        process.nextTick(function() {\n\n            User.findOne({ 'github.id' : profile.id }, function(err, user) {\n\n                if (err)\n                    return done(err);\n\n                if (user) {\n                    console.log('user matched: ' + user);\n                    console.log(profile);\n                    return done(null, user); \n                } else {\n                    console.log('github account retrieved');  \n                    console.log(profile);\n\n                    let newUser            = new User();\n\n                    newUser.github.id    = profile.id;                  \n                    newUser.github.token = token;                     \n                    newUser.github.name  = profile.displayName;\n                    newUser.github.email = profile.email ? profile.email : profile.username; \n         \n                    newUser.save(function(err) {\n                        if (err)\n                            throw err;\n\n                        return done(null, newUser);\n                    }); \n                };\n            });\n        });\n    }));  \n\n\n\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/passport.js\n// module id = 11\n// module chunks = 0","module.exports = require(\"passport-local\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-local\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"passport-facebook\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-facebook\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"passport-google-oauth\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-google-oauth\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"passport-github2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-github2\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"passport-linkedin\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-linkedin\"\n// module id = 16\n// module chunks = 0","const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\n// define the schema for our user model\nconst userSchema = new mongoose.Schema({\n\n    local            : {\n        email        : String,\n        password     : String,\n        name         : String\n    },\n    facebook         : {\n        id           : String,\n        token        : String,\n        email        : String,\n        name         : String\n    },\n    google           : {\n        id           : String,\n        token        : String,\n        email        : String,\n        name         : String\n    },\n    github           : {\n        id           : String,\n        token        : String,\n        email        : String,\n        name         : String\n    },\n    linkedin           : {\n        id           : String,\n        token        : String,\n        email        : String,\n        name         : String\n    }\n\n});\n\n// methods ======================\n// generating a hash\nuserSchema.methods.generateHash = function(password) {\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);\n};\n\n// checking if password is valid\nuserSchema.methods.validPassword = function(password) {\n    return bcrypt.compareSync(password, this.local.password);\n};\n\n// create the model for users and expose it to our app\nmodule.exports = mongoose.model('User', userSchema);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/models/user.js\n// module id = 17\n// module chunks = 0","// config/auth.js\n\n// expose our config directly to our application using module.exports\nmodule.exports = {\n\n    'facebookAuth' : {\n        'clientID'      : '1112500148831397', \n        'clientSecret'  : '74d6fdaa284dbd772a830c33d01c547b', \n        'callbackURL'   : 'http://localhost:8080/auth/facebook/callback',\n        'profileFields' :  [\"emails\", \"displayName\", \"name\", \"email\", \"hometown\", \"location\"]\n    },\n\n    'googleAuth' : {\n        'clientID'      : '792416882677-megla5jquv3no6oricto4gaca02pq9oq.apps.googleusercontent.com',\n        'clientSecret'  : 'cn2484z3pqJ4hNpRHdg0LHNg',\n        'callbackURL'   : 'http://localhost:8080/auth/google/callback'\n    },\n\n    'githubAuth' : {\n        'clientID'      : 'b5991bbd2f36322c7ee9',\n        'clientSecret'  : '890327b582412b907b4a74d18e5ce7a4a80946dd',\n        'callbackURL'   : 'http://localhost:8080/auth/github/callback'\n    },\n\n    'linkedinAuth' : {\n        'clientID'      : '78h7rxui49b4l4',\n        'clientSecret'  : '7zCIEfR5uJ7lKUF2',\n        'callbackURL'   : \"http://localhost:8080/auth/linkedin/callback\"\n  }\n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/auth.js\n// module id = 18\n// module chunks = 0","const User = require('../app/models/user');\nconst Page = require('../app/models/page');\nconst Project = require('../app/models/project');\nconst Skill = require('../app/models/skill');\nconst Option = require('../app/models/option');\n\n\nmodule.exports = function(app, passport) { \n    \n    // =====================================\n    // HOME PAGE (with login links) ========\n    // =====================================\n    app.get('/', function(req, res) {\n\n       res.render('index.pug', { message: req.flash('signupMessage') } ); \n    });\n\n    // =====================================\n    // LOGIN ===============================\n    // =====================================\n    app.get('/login', function(req, res) {\n\n        res.render('login.pug', { message: req.flash('loginMessage') }); \n    });\n\n    app.post('/login', passport.authenticate('local-login', {\n        successRedirect : '/cms', // redirect to the secure profile section\n        failureRedirect : '/login', // redirect back to the signup page if there is an error\n        failureFlash : true // allow flash messages\n    }));\n\n    // =====================================\n    // SIGNUP ==============================\n    // =====================================\n    app.get('/signup', function(req, res) {\n\n        res.render('signup.pug', { message: req.flash('signupMessage') });\n    });\n\n    app.post('/signup', passport.authenticate('local-signup', {\n        successRedirect : '/cms', \n        failureRedirect : '/signup', \n        failureFlash : true \n    }));\n\n\n    // =====================================\n    // ADMIN SECTION =======================\n    // =====================================\n\n    app.get('/cms', isLoggedIn, function(req, res) {\n        console.log('logged in as: ' + req.user.local.name);\n\n        res.render('admin-layout.pug', {\n            user : req.user \n        });\n\n    // ---------------------- Admin endpoint seperator\n    // Endpoints to fetch all documents in Page, Project, Skill, and User collections\n\n        app.get('/cms/pages/get-pages', function(req, res) {\n            Page.find(function(err, pages) {\n                if (err) {\n                    return res.status(500).json({\n                        message: 'Internal Server Error'\n                    });\n                }\n\n                res.status(200).json(pages).end();\n            })\n        })\n\n        app.get('/cms/projects/get-projects', function(req, res) {\n            Project.find(function(err, projects) {\n                if (err) {\n                    return res.status(500).json({\n                        message: 'Internal Server Error'\n                    });\n                }\n                let fetchProjects = {\n                    projects: projects\n                };\n                Skill.find(function(err, skills) {\n                    if (err) {\n                        return res.status(500).json({\n                            message: 'Internal Server Error'\n                        });\n                    }\n\n                    let skillsArr = [];\n\n                    // skills result is an array of skills objects\n                    // turn the result into an array with skill name values\n                    for ( let i = 0; i < skills.length; i++ ) {\n                        skillsArr.push(skills[i].skill);\n                    }\n                    fetchProjects.skills = skillsArr;\n\n                    res.status(200).json(fetchProjects).end();\n                });\n            });\n        });\n\n        app.get('/cms/skills/get-skills', function(req, res) {\n            Skill.find(function(err, skills) {\n                if (err) {\n                    return res.status(500).json({\n                        message: 'Internal Server Error'\n                    });\n                }\n                res.status(200).json(skills).end();\n            });\n        });\n\n        app.get('/cms/users/get-users', function(req, res) {\n            User.find(function(err, users) {\n                if (err) {\n                    return res.status(500).json({\n                        message: 'Internal Server Error'\n                    });\n                }\n\n                // use the local login for accounts created from back end\n                for (let i = 0; i < users.length; i++) {\n\n                    if (users[i].google && !users[i].local.name) {\n                        users[i].local.name = users[i].google.name;\n                        users[i].local.email = users[i].google.email;\n                        users[i].local.password = users[i].google.token;\n                    }\n                    if (users[i].facebook && !users[i].local.name) {\n                        users[i].local.name = users[i].facebook.name;\n                        users[i].local.email = users[i].facebook.email;\n                        users[i].local.password = users[i].facebook.token;\n                    }\n                    if (users[i].linkedin && !users[i].local.name) {\n                        users[i].local.name = users[i].linkedin.name;\n                        users[i].local.email = users[i].linkedin.email;\n                        users[i].local.password = users[i].linkedin.token;\n                    }\n\n                    if (users[i].github && !users[i].local.name) {\n                        users[i].local.name = users[i].github.name;\n                        users[i].local.email = users[i].github.email;\n                        users[i].local.password = users[i].github.token;\n                    }\n\n                }\n\n                res.status(200).json(users).end();\n            });\n        });\n\n        app.get('/cms/options/get-options', function(req, res) {\n            Option.find(function(err, options) {\n                if (err) {\n                    return res.status(500).json({\n                        message: 'Internal Server Error'\n                    });\n                }\n\n                res.status(200).json(options).end();\n            })\n        })\n\n    // Admin endpoint seperator ----------------------\n    // PAGE endpoints --------------------------------\n\n        app.post('/cms/pages/new-page', function(req, res) {\n            \n            Page.findOne({ title: req.body.title}, function(err, page) {\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (req.body.title === '' || req.body.title == undefined) {\n                    return false;\n                }\n\n                if (page) {\n                    console.log(page.title + ' already exists');\n                    return res.status(200).redirect('/cms/pages/get-pages');\n                }\n\n                else {\n                    let page = new Page();\n                    page.title = req.body.title;\n                    page.friendlyUrl = req.body.friendlyUrl.trim().replace(/ /g, \"_\");\n                    page.content = req.body.content;\n    \n                    page.save(function(err) {\n                        if (err) {\n                            res.status(500);\n                        }\n                        console.log('saved new page: ' + page.title);\n                        res.redirect('/cms/pages/get-pages');\n                    });\n                }\n            })      \n        }) \n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n\n        app.post('/cms/pages/delete/:id', function(req, res) {\n            let id = req.body.id;\n            Page.findByIdAndRemove(id, function(err, page) {\n                if (err) {\n                    return res.status(500);\n                }\n                if (page) {\n                    console.log(page.title + ' deleted');\n\n                    res.redirect('/cms/pages/get-pages');\n                }\n            })\n        })\n\n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n        app.post('/cms/pages/edit-page/:id', function(req, res) {\n\n            let id = req.body._id;\n            let updateObj = req.body;\n\n            Page.findByIdAndUpdate( id, updateObj, {new: true}, function(err, page) {\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (id == '' || !id) {\n                    return false;\n                }\n\n                if (page) {\n                    console.log(page.title + ' found');  \n                    console.log('changes made ', page);\n                }\n    \n                page.save(function(err) {\n                    if (err) {\n                        res.status(500);\n                    }\n                    console.log('saved page: ' + page.title);\n                    res.redirect('/cms/pages/get-pages');\n                });\n            })      \n        })\n    // Admin endpoint seperator ---------------\n    // PROJECT endpoints ----------------------\n\n        app.post('/cms/projects/new-project', function(req, res) {\n            \n            Project.findOne({ name: req.body.name}, function(err, project) {\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (req.body.name === '' || req.body.name == undefined) {\n                    return false;\n                }\n\n                if (project) {\n                    console.log(project.name + ' already exists');\n                    return res.status(200).redirect('/cms/projects/get-projects');\n                }\n\n                else {\n                    let project = new Project();\n                    project.name = req.body.name;\n                    project.friendlyUrl = req.body.friendlyUrl.trim().replace(/ /g, \"_\");\n\n                    // check for http or https on links\n                    let http = 'http';\n                    project.image = req.body.image;\n                    project.livelink = req.body.livelink;\n                    project.codeUrl = req.body.codeUrl;\n\n                    imageBeg = req.body.image.split('').slice(0,4).join('');\n                    livelinkBeg = req.body.livelink.split('').slice(0,4).join('');\n                    codeUrlBeg = req.body.codeUrl.split('').slice(0,4).join('');\n\n                    if (http != imageBeg) {\n                        project.image = 'http://' + project.image;\n                    }\n\n                    if (http != livelinkBeg) {\n                        project.livelink = 'http://' + project.livelink;\n                    }\n\n                    if (http != codeUrlBeg) {\n                        project.codeUrl = 'http://' + project.codeUrl;\n                    }\n\n                    project.description = req.body.description;\n                    project.skills = req.body.skills;\n    \n                    project.save(function(err) {\n                        if (err) {\n                            res.status(500);\n                        }\n                        console.log('saved project: ' + project.name);\n                        res.redirect('/cms/projects/get-projects');\n                    });\n                }\n            })      \n        }) \n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n\n        app.post('/cms/projects/delete/:id', function(req, res) {\n            let id = req.body.id;\n            Project.findByIdAndRemove(id, function(err, project) {\n                if (err) {\n                    return res.status(500);\n                }\n                if (project) {\n                    console.log(project.name + ' deleted');\n\n                    res.redirect('/cms/projects/get-projects');\n                }\n            })\n        })\n\n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n\n        app.post('/cms/projects/edit-project/:id', function(req, res) {\n            \n            let id = req.body._id;\n            let updateObj = req.body;\n\n            Project.findByIdAndUpdate( id, updateObj, {new: true}, function(err, project) {\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (id == '' || !id) {\n                    return false;\n                }\n\n                if (project) {\n                    console.log(project.name + ' found');  \n                    console.log('changes made ', project);\n                \n                    project.save(function(err) {\n                        if (err) {\n                            res.status(500);\n                        }\n                        console.log('saved project: ' + project.name);\n                        res.redirect('/cms/projects/get-projects');\n                    });\n                }\n            })      \n        })\n\n    // Admin endpoint seperator -------------------\n    // SKILL endpoints ----------------------------\n\n        app.post('/cms/skills/new-skill', function(req, res) {\n                \n            Skill.findOne({ skill: req.body.skill}, function(err, skill) {\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (req.body.skill == '') {\n                    return false;\n                }\n\n                if (skill) {\n                    console.log(skill.skill + ' already exists');\n                    return res.status(200).redirect('/cms/skills/get-skills');\n                }\n\n                let newskill = new Skill();\n                newskill.skill = req.body.skill;\n                \n                newskill.save(function(err) {\n                    if (err) {\n                        res.status(500);\n                    }\n                    console.log('saved new skill: ' + newskill.skill);\n                    res.redirect('/cms/skills/get-skills');\n                });\n            })      \n        }) \n\n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n\n        app.post('/cms/skills/delete/:id', function(req, res) {\n            let id = req.body.id;\n            Skill.findByIdAndRemove(id, function(err, skill) {\n                if (err) {\n                    return res.status(500);\n                }\n                if (skill) {\n                    console.log(skill.skill + ' deleted');\n                    \n                }\n                res.redirect('/cms/skills/get-skills');\n            })\n        })\n\n    // Admin endpoint seperator -------------------\n    // USER endpoints ----------------------------\n\n        app.post('/cms/users/new-user', function(req, res) {\n                \n            User.findOne({'local.email': req.body.local.email} , function(err, user) {\n\n                if (!req.body.local.email || !req.body.local.name) {\n                    return false;\n                }\n\n                if (user) {\n                    console.log(user.local.email + ' already exists');\n                    return res.status(200).redirect('/cms/users/get-users');\n                }\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                let newuser = new User();\n                newuser.local = {};\n                newuser.local.name = req.body.local.name;\n                newuser.local.email = req.body.local.email;\n                newuser.local.password = newuser.generateHash(req.body.local.password);\n                \n                newuser.save(function(err) {\n                    if (err) {\n                        res.status(500);\n                    }\n                    console.log('saved new user: ' + newuser.local.email);\n                    res.redirect('/cms/users/get-users');\n                });\n            })      \n        })\n\n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n\n        app.post('/cms/users/edit-user/:id', function(req, res) {\n            \n            let id = req.body._id;\n            let updateObj = req.body;\n\n            User.findById(id, function(err, user) {\n\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (updateObj.local.email === '' || !updateObj.local.email) {\n                    return false;\n                }\n\n                if (user) {\n                    console.log(user.local.email + ' found');  \n\n                }\n\n                user.local.email = updateObj.local.email;\n                user.local.name = updateObj.local.name;\n                \n                if (user.local.password != updateObj.local.password) {\n                    user.local.password = updateObj.local.password;\n                    user.local.password = user.generateHash(user.local.password);\n                }\n                console.log('changes', user);\n    \n                user.save(function(err) {\n                    if (err) {\n                        res.status(500);\n                    }\n                    console.log('saved user: ' + user.local.email);\n                    res.redirect('/cms/users/get-users');\n                });  \n            \n            })      \n        })\n\n    // ---------------------- Admin endpoint seperator\n    // ----------------------\n\n        app.post('/cms/users/delete/:id', function(req, res) {\n            let id = req.body.id;\n            User.findByIdAndRemove(id, function(err, user) {\n                if (err) {\n                    return res.status(500);\n                }\n                if (user) {\n                    console.log(user.local.email + ' deleted');\n                    \n                }\n                res.redirect('/cms/users/get-users');\n            })\n        })\n\n    // Admin endpoint seperator -------------------\n    // OPTION, Themes endpoints -------------------\n\n        app.post('/cms/options/new-option', function(req, res) {\n\n            Option.findOne({ key: req.body.key}, function(err, option) {\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (req.body.key === '') {\n                    return false;\n                }\n\n                if (option) {\n                    console.log(option.key + ' already exists');\n                    return res.status(200).redirect('/cms/options/get-options');\n                }\n\n                let newOption = new Option();\n                newOption.key = req.body.key;\n                newOption.value = req.body.value;\n                \n                newOption.save(function(err) {\n                    if (err) {\n                        res.status(500);\n                    }\n                    console.log('saved new option: ' + newOption.key + ' = ' + newOption.value);\n                    res.redirect('/cms/options/get-options');\n                });\n            })\n        })\n\n        // ---------------------- Admin endpoint seperator\n        // ----------------------\n\n        app.get('/cms/options/get-theme', function(req, res) {\n\n            Option.findOne({ key: 'theme'}, function(err, option) {\n                if (err) {\n                    return res.status(500);\n                }\n\n                console.log('theme retrieved: ' + option.value);\n                res.status(200).json(option).end();\n\n            })\n        })\n\n        // ---------------------- Admin endpoint seperator\n        // ----------------------\n\n        app.post('/cms/options/select-theme', function(req, res) {\n\n            Option.findOne({ key: 'theme'}, function(err, option) {\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (req.body.key === '') {\n                    return false;\n                }\n\n                if (option) {\n                    option.value = req.body.value;\n                    \n                    option.save(function(err) {\n                        if (err) {\n                            return res.status(500);\n                        }\n\n                        console.log(option.key + ' updated: ' + option.value);\n                        return res.status(200).json(option).end();\n                    });\n                }\n\n                else {\n\n                    let newOption = new Option();\n                    newOption.key = 'theme';\n                    newOption.value = req.body.value;\n                    \n                    newOption.save(function(err) {\n                        if (err) {\n                            return res.status(500);\n                        }\n                        console.log('saved new option: ' + newOption.key + ' = ' + newOption.value);\n                        res.status(200).json(newOption).end();\n                    });\n                }\n            })\n        })\n\n\n    // ====  Refresh page catch-all endpoint ========\n\n        app.get('/cms/*', function(req, res) {\n            console.log('catch-all endpoint');\n            res.redirect('/cms');\n        })\n\n// ----------------\n// ---------------- Admin endpoints above this line\n// ----------------\n    });\n\n    // =====================================\n    // FACEBOOK ROUTES =====================\n    // =====================================\n    // 'public_profile' SHOULD be added to the scope, contrary to facebook developer documentation\n    app.get('/auth/facebook', passport.authenticate('facebook', { scope : ['email', 'public_profile'] }));\n\n    app.get('/auth/facebook/callback',\n        passport.authenticate('facebook', {\n            successRedirect : '/cms',\n            failureRedirect : '/'\n        }));\n\n    // =====================================\n    // GITHUB ROUTES =======================\n    // =====================================\n    app.get('/auth/github', passport.authenticate('github', { scope : ['user', 'public_repo', 'repo'] }));\n\n    app.get('/auth/github/callback',\n        passport.authenticate('github', {\n            successRedirect : '/cms',\n            failureRedirect : '/'\n        }));\n\n    // =====================================\n    // LINKEDIN ROUTES =====================\n    // =====================================\n    app.get('/auth/linkedin', passport.authenticate('linkedin', { scope : ['r_emailaddress', 'r_basicprofile'] }));\n\n    app.get('/auth/linkedin/callback',\n        passport.authenticate('linkedin', {\n            successRedirect : '/cms',\n            failureRedirect : '/'\n        }));\n\n    // =====================================\n    // GOOGLE ROUTES =======================\n    // =====================================\n    app.get('/auth/google', passport.authenticate('google', { scope : ['profile', 'email'] }));\n\n    app.get('/auth/google/callback',\n        passport.authenticate('google', {\n                successRedirect : '/cms',\n                failureRedirect : '/'\n        }));\n\n    // =====================================\n    // LOGOUT ==============================\n    // =====================================\n    app.get('/logout', function(req, res) {\n        req.logout();\n        res.redirect('/');\n    });\n\n    // =============\n    // DEFAULT THEME \n    // =============\n\n    app.get('/:friendlyUrl', function(req, res) {\n\n        Page.findOne( {friendlyUrl: req.params.friendlyUrl}, function(err, page) {\n\n            if (err) {\n                return res.status(500);\n            }\n\n            if (!page) {\n                console.log('page not found from parameter: ' + req.params.friendlyUrl);\n                return res.status(404).json(null);\n            }\n\n            // Use option model to get chosen theme\n            Option.findOne({ key: 'theme'}, function(err, option) {\n                if (err) {\n                    return res.status(500);\n                }\n\n                if (!option) {\n                    console.log('theme not found');\n                }\n\n                // Fetch all projects\n                Project.find(function(err, projects) {\n                    if (err) {\n                        return res.status(500).json({\n                            message: 'Internal Server Error'\n                        });\n                    }\n\n                    let renderFile = '../themes/' + option.value + '/' + req.params.friendlyUrl + '.pug';\n                    console.log(renderFile);\n\n                    // file name of template needs to match friendlyUrl\n                    res.render(renderFile, {\n                        title : page.title,\n                        friendlyUrl : page.friendlyUrl,\n                        content: page.content,\n                        projects: projects\n                    });\n                })\n            })\n        });\n    })\n\n// ====== End of module exports\n// ======   \n};\n\n// route middleware to make sure a user is logged in\nfunction isLoggedIn(req, res, next) {\n    if (req.isAuthenticated())\n        return next();\n    res.redirect('/');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/routes.js\n// module id = 19\n// module chunks = 0","const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst pageSchema = new mongoose.Schema({\n\ttitle: String,\n\tfriendlyUrl: String,\n\tcontent: String\n\n});\n\nmodule.exports = mongoose.model('Page', pageSchema);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/models/page.js\n// module id = 20\n// module chunks = 0","const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst projectSchema = new mongoose.Schema({\n\tname: String,\n\tfriendlyUrl: String,\n\timage: String,\n\tlivelink: String,\n\tcodeUrl: String,\n\tdescription: String,\n\tskills: Array\n\n});\n\nmodule.exports = mongoose.model('Project', projectSchema);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/models/project.js\n// module id = 21\n// module chunks = 0","const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst skillSchema = new mongoose.Schema({\n\tskill: String\n\n});\n\nmodule.exports = mongoose.model('Skill', skillSchema);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/models/skill.js\n// module id = 22\n// module chunks = 0","const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\n// use key for theme and value for name of theme\n\nconst optionsSchema = new mongoose.Schema({\n\tkey: String,\n\tvalue: String\n\n});\n\nmodule.exports = mongoose.model('Option', optionsSchema);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/models/option.js\n// module id = 23\n// module chunks = 0"],"sourceRoot":""}